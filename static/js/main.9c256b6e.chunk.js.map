{"version":3,"sources":["Header.js","Note.js","NotesList.js","App.js","index.js"],"names":["Header","onSearch","searchText","addNote","className","onClick","type","placeholder","value","onChange","e","target","Note","note","onType","removeNote","title","updatedValue","editMeId","id","description","NotesList","notes","noteElements","filter","doesMatchSearch","map","App","useState","Date","now","setNotesTo","setSearchTextTo","useEffect","stringifiedNotes","JSON","stringify","localStorage","setItem","getItem","savedNotes","parse","newNotes","text","newSearchText","toLowerCase","updatedNotes","titleMatch","includes","descriptionMatch","hasMatch","updatedKey","noteId","rootElement","document","getElementById","createRoot","render"],"mappings":"kKAyBeA,EAvBA,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,QAItC,OACE,yBAAQC,UAAU,aAAlB,UACE,oBAAIA,UAAU,oBAAd,gCACA,wBAAOA,UAAU,uBAAjB,UACE,wBAAQA,UAAU,UAAUC,QAASF,EAArC,wBAGA,uBACEG,KAAK,OACLC,YAAY,yBACZH,UAAU,SACVI,MAAON,EACPO,SAfW,SAACC,GAClBT,EAASS,EAAEC,OAAOH,iBCgCPI,EAlCF,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WAY5B,OACE,qBAAIX,UAAU,OAAd,UACE,uBACEE,KAAK,OACLC,YAAY,QACZH,UAAU,cACVI,MAAOK,EAAKG,MACZP,SAlBc,SAACC,GACnB,IAAMO,EAAeP,EAAEC,OAAOH,MACxBU,EAAWL,EAAKM,GACtBL,EAAOI,EAAU,QAASD,MAiBxB,0BACEV,YAAY,iBACZH,UAAU,oBACVI,MAAOK,EAAKO,YACZX,SAnBoB,SAACC,GACzB,IAAMO,EAAeP,EAAEC,OAAOH,MACxBU,EAAWL,EAAKM,GACtBL,EAAOI,EAAU,cAAeD,MAkB9B,sBAAMb,UAAU,eAAeC,QAhBf,kBAAMU,EAAWF,EAAKM,KAgBtC,mBCdSE,EAZG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOR,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WAQ5BQ,EANgBD,EAAME,QADF,SAACX,GAAD,OAAUA,EAAKY,mBAONC,KAJhB,SAACb,GAAD,OACjB,cAAC,EAAD,CAAMA,KAAMA,EAAoBC,OAAQA,EAAQC,WAAYA,GAArCF,EAAKM,OAI9B,OAAO,oBAAIf,UAAU,aAAd,SAA4BmB,KC4EtBI,G,MAnFH,WACV,MAA4BC,mBAAS,CACnC,CACET,GAAIU,KAAKC,MACTd,MAAO,GACPI,YAAa,GACbK,iBAAiB,KALrB,mBAAOH,EAAP,KAAcS,EAAd,KAQA,EAAsCH,mBAAS,IAA/C,mBAAO1B,EAAP,KAAmB8B,EAAnB,KAmEA,OAbAC,qBAAU,WACR,IAAMC,EAAmBC,KAAKC,UAAUd,GACxCe,aAAaC,QAAQ,aAAcJ,KAClC,CAACZ,IAEJW,qBAAU,WACR,IAAMC,EAAmBG,aAAaE,QAAQ,cAC9C,GAAIL,EAAkB,CACpB,IAAMM,EAAaL,KAAKM,MAAMP,GAC9BH,EAAWS,MAEZ,IAGD,gCACE,cAAC,EAAD,CAAQtC,WAAYA,EAAYC,QAnEpB,WACd,IAMMuC,EAAQ,CANE,CACdvB,GAAIU,KAAKC,MACTd,MAAO,GACPI,YAAa,GACbK,iBAAiB,IAEL,mBAAgBH,IAC9BS,EAAWW,IA2DyCzC,SAxCrC,SAAC0C,GAChB,IAAMC,EAAgBD,EAAKE,cACrBC,EAAexB,EAAMI,KAAI,SAACb,GAC9B,GAAK+B,EAGE,CACL,IAAM5B,EAAQH,EAAKG,MAAM6B,cACnBzB,EAAcP,EAAKO,YAAYyB,cAC/BE,EAAa/B,EAAMgC,SAASJ,GAC5BK,EAAmB7B,EAAY4B,SAASJ,GACxCM,EAAWH,GAAcE,EAE/B,OADApC,EAAKY,gBAAkByB,EAChBrC,EARP,OADAA,EAAKY,iBAAkB,EAChBZ,KAWXmB,EAAgBY,GAChBb,EAAWe,MAwBT,cAAC,EAAD,CAAWxB,MAAOA,EAAOR,OAzDd,SAACI,EAAUiC,EAAYlC,GACpC,IAAM6B,EAAexB,EAAMI,KAAI,SAACb,GAC9B,OAAIA,EAAKM,KAAOD,EACPL,EAEY,UAAfsC,GACFtC,EAAKG,MAAQC,EACNJ,IAEPA,EAAKO,YAAcH,EACZJ,MAIbkB,EAAWe,IA2CgC/B,WAtB1B,SAACqC,GAClB,IACMN,EAAexB,EAAME,QADR,SAACX,GAAD,OAAUA,EAAKM,KAAOiC,KAEzCrB,EAAWe,WC5DTO,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAAC,EAAD,S","file":"static/js/main.9c256b6e.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = ({ onSearch, searchText, addNote }) => {\n  const callSearch = (e) => {\n    onSearch(e.target.value);\n  };\n  return (\n    <header className=\"app-header\">\n      <h1 className=\"app-header__title\">Super Sticky Notes</h1>\n      <aside className=\"app-header__controls\">\n        <button className=\"add-new\" onClick={addNote}>\n          + New Note\n        </button>\n        <input\n          type=\"text\"\n          placeholder=\"Type here to search...\"\n          className=\"search\"\n          value={searchText}\n          onChange={callSearch}\n        />\n      </aside>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Note = ({ note, onType, removeNote }) => {\n  const updateTitle = (e) => {\n    const updatedValue = e.target.value;\n    const editMeId = note.id;\n    onType(editMeId, \"title\", updatedValue);\n  };\n  const updateDescription = (e) => {\n    const updatedValue = e.target.value;\n    const editMeId = note.id;\n    onType(editMeId, \"description\", updatedValue);\n  };\n  const clickDelete = () => removeNote(note.id);\n  return (\n    <li className=\"note\">\n      <input\n        type=\"text\"\n        placeholder=\"Title\"\n        className=\"note__title\"\n        value={note.title}\n        onChange={updateTitle}\n      />\n      <textarea\n        placeholder=\"Description...\"\n        className=\"note__description\"\n        value={note.description}\n        onChange={updateDescription}\n      />\n      <span className=\"note__delete\" onClick={clickDelete}>\n        X\n      </span>\n    </li>\n  );\n};\n\nexport default Note;\n","import React from \"react\";\nimport Note from \"./Note.js\";\n\nconst NotesList = ({ notes, onType, removeNote }) => {\n  const keepSearchMatches = (note) => note.doesMatchSearch;\n  const searchMatches = notes.filter(keepSearchMatches);\n\n  const renderNote = (note) => (\n    <Note note={note} key={note.id} onType={onType} removeNote={removeNote} />\n  );\n\n  const noteElements = searchMatches.map(renderNote);\n  return <ul className=\"notes-list\">{noteElements}</ul>;\n};\n\nexport default NotesList;\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"./Header.js\";\nimport NotesList from \"./NotesList.js\";\nimport \"./styles.css\";\n\nconst App = () => {\n  const [notes, setNotesTo] = useState([\n    {\n      id: Date.now(),\n      title: \"\",\n      description: \"\",\n      doesMatchSearch: true\n    }\n  ]);\n  const [searchText, setSearchTextTo] = useState(\"\");\n\n  const addNote = () => {\n    const newNote = {\n      id: Date.now(),\n      title: \"\",\n      description: \"\",\n      doesMatchSearch: true\n    };\n    const newNotes = [newNote, ...notes];\n    setNotesTo(newNotes);\n  };\n\n  const onType = (editMeId, updatedKey, updatedValue) => {\n    const updatedNotes = notes.map((note) => {\n      if (note.id !== editMeId) {\n        return note;\n      } else {\n        if (updatedKey === \"title\") {\n          note.title = updatedValue;\n          return note;\n        } else {\n          note.description = updatedValue;\n          return note;\n        }\n      }\n    });\n    setNotesTo(updatedNotes);\n  };\n  const onSearch = (text) => {\n    const newSearchText = text.toLowerCase();\n    const updatedNotes = notes.map((note) => {\n      if (!newSearchText) {\n        note.doesMatchSearch = true;\n        return note;\n      } else {\n        const title = note.title.toLowerCase();\n        const description = note.description.toLowerCase();\n        const titleMatch = title.includes(newSearchText);\n        const descriptionMatch = description.includes(newSearchText);\n        const hasMatch = titleMatch || descriptionMatch;\n        note.doesMatchSearch = hasMatch;\n        return note;\n      }\n    });\n    setSearchTextTo(newSearchText);\n    setNotesTo(updatedNotes);\n  };\n  const removeNote = (noteId) => {\n    const notIdMatch = (note) => note.id !== noteId;\n    const updatedNotes = notes.filter(notIdMatch);\n    setNotesTo(updatedNotes);\n  };\n\n  useEffect(() => {\n    const stringifiedNotes = JSON.stringify(notes);\n    localStorage.setItem(\"savedNotes\", stringifiedNotes);\n  }, [notes]);\n\n  useEffect(() => {\n    const stringifiedNotes = localStorage.getItem(\"savedNotes\");\n    if (stringifiedNotes) {\n      const savedNotes = JSON.parse(stringifiedNotes);\n      setNotesTo(savedNotes);\n    }\n  }, []);\n\n  return (\n    <div>\n      <Header searchText={searchText} addNote={addNote} onSearch={onSearch} />\n      <NotesList notes={notes} onType={onType} removeNote={removeNote} />\n    </div>\n  );\n};\nexport default App;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}